{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./bower_components/gif.js/dist/gif.js","webpack:///./bower_components/gifuct-js/dist/gifuct-js.js","webpack:///./src/cropperjs-gif.js","webpack:///./src/blob-creator.js","webpack:///./src/easy-gif.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","e","u","a","f","Error","code","length","1","EventEmitter","this","_events","_maxListeners","undefined","isFunction","arg","isObject","isUndefined","defaultMaxListeners","setMaxListeners","isNaN","TypeError","emit","type","er","handler","len","args","listeners","error","arguments","err","context","Array","slice","apply","addListener","listener","newListener","push","warned","console","trace","on","once","fired","g","removeListener","list","position","splice","removeAllListeners","listenerCount","evlistener","emitter","2","UA","browser","platform","ua","navigator","userAgent","toLowerCase","match","document","documentMode","version","parseFloat","parseInt","3","GIF","hasProp","indexOf","item","superClass","defaults","frameDefaults","options","base","running","frames","freeWorkers","activeWorkers","setOptions","child","parent","ctor","constructor","__super__","extend","workerScript","workers","repeat","background","quality","width","height","transparent","debug","dither","delay","copy","setOption","_canvas","results","addFrame","image","frame","ImageData","data","CanvasRenderingContext2D","WebGLRenderingContext","getContextData","childNodes","getImageData","render","j","numWorkers","ref","nextFrame","finishedFrames","imageParts","spawnWorkers","globalPalette","renderNextFrame","abort","worker","shift","log","terminate","_this","Math","min","forEach","Worker","onmessage","event","frameFinished","index","finishRendering","k","len1","len2","len3","offset","page","ref1","ref2","pageSize","cursor","round","Uint8Array","set","Blob","task","getTask","postMessage","ctx","createElement","getContext","setFill","fillRect","drawImage","last","canTransfer","./browser.coffee","events","ByteStream","pos","readByte","peekByte","readBytes","bytes","peekBytes","readString","str","String","fromCharCode","readBitArray","arr","bite","readUnsigned","littleEndian","DataParser","stream","output","parse","schema","parseParts","obj","part","parsePart","label","requires","loop","items","parts","parser","skip","bits","parseBits","details","out","reduce","./bytestream","Parsers","readArray","size","countFunc","count","4","window","./gif","5","gifSchema","arrayBuffer","byteData","raw","hasImages","decompressFrame","buildPatch","totalPixels","descriptor","pixels","minCodeSize","pixelCount","available","clear","code_mask","code_size","end_of_information","in_code","old_code","datum","data_size","first","top","bi","pi","npix","dstPixels","prefix","suffix","pixelStack","MAX_STACK_SIZE","lzw","blocks","lct","interlaced","newPixels","rows","cpRow","toRow","fromRow","fromPixels","concat","offsets","steps","pass","deinterlace","dims","left","exists","colorTable","gct","gce","disposalType","extras","disposal","transparentColorGiven","transparentIndex","transparentColorIndex","patch","patchData","Uint8ClampedArray","colorIndex","color","generatePatch","decompressFrames","../bower_components/js-binary-schema-parser/src/dataparser","./schema","6","subBlocks","codes","future","userInput","sort","pow","text","blockSize","nextCode","schemaGIF","resolution","lsd","../bower_components/js-binary-schema-parser/src/parsers","GifCropper","containerCanvas","containerCtx","convertorCanvas","convertorCtx","containerCenterX","containerCenterY","nextTick","callback","setTimeout","style","body","insertBefore","firstChild","__webpack_exports__","CropperjsGif","ERROR","IMAGE_LOAD_ERROR","IMAGE_READ_ERROR","DECODE_ERROR","ENCODE_ERROR","crop","cropper","cropArea","getData","that","limitRatio","calcLimitRatio","limitCropArea","x","y","scaleX","scaleY","rotate","readAndDecodeGif","setupCanvas","cropFrame","result","saveGif","cropBlob","xRatio","maxWidth","yRatio","maxHeight","Image","onload","naturalWidth","naturalHeight","xhr","XMLHttpRequest","responseType","onreadystatechange","readyState","status","decode","response","errorHandler","statusText","open","src","send","onerror","arraybuffer","gifDecoder","EasyGif","decoder","radian","PI","rotatedBoxWidth","cos","sin","rotatedBoxHeight","offsetX","offsetY","max","clearRect","frameIndex","cropImgData","imgData","frameToImageData","save","translate","scale","drawImgDataToCanvas","restore","globalCompositeOperation","fillStyle","putImageData","imgDataList","encoder","blob","errorCode","requestAnimationFrame","webkitRequestAnimationFrame","blob_creator","createBlob","uint8Arr","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","bb","append","buffer","getBlob","fixCompatibility","gif_default","test","toString","toUint8Array","_addFrame","ret","lastFrame","sourceCode","replace","Function","createImageData","gifuct_js","_easy_gif__WEBPACK_IMPORTED_MODULE_0__","_cropperjs_gif__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"cropperjs-gif-all.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","// gif.js 0.2.0 - https://github.com/jnordberg/gif.js\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.GIF=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){function EventEmitter(){this._events=this._events||{};this._maxListeners=this._maxListeners||undefined}module.exports=EventEmitter;EventEmitter.EventEmitter=EventEmitter;EventEmitter.prototype._events=undefined;EventEmitter.prototype._maxListeners=undefined;EventEmitter.defaultMaxListeners=10;EventEmitter.prototype.setMaxListeners=function(n){if(!isNumber(n)||n<0||isNaN(n))throw TypeError(\"n must be a positive number\");this._maxListeners=n;return this};EventEmitter.prototype.emit=function(type){var er,handler,len,args,i,listeners;if(!this._events)this._events={};if(type===\"error\"){if(!this._events.error||isObject(this._events.error)&&!this._events.error.length){er=arguments[1];if(er instanceof Error){throw er}else{var err=new Error('Uncaught, unspecified \"error\" event. ('+er+\")\");err.context=er;throw err}}}handler=this._events[type];if(isUndefined(handler))return false;if(isFunction(handler)){switch(arguments.length){case 1:handler.call(this);break;case 2:handler.call(this,arguments[1]);break;case 3:handler.call(this,arguments[1],arguments[2]);break;default:args=Array.prototype.slice.call(arguments,1);handler.apply(this,args)}}else if(isObject(handler)){args=Array.prototype.slice.call(arguments,1);listeners=handler.slice();len=listeners.length;for(i=0;i<len;i++)listeners[i].apply(this,args)}return true};EventEmitter.prototype.addListener=function(type,listener){var m;if(!isFunction(listener))throw TypeError(\"listener must be a function\");if(!this._events)this._events={};if(this._events.newListener)this.emit(\"newListener\",type,isFunction(listener.listener)?listener.listener:listener);if(!this._events[type])this._events[type]=listener;else if(isObject(this._events[type]))this._events[type].push(listener);else this._events[type]=[this._events[type],listener];if(isObject(this._events[type])&&!this._events[type].warned){if(!isUndefined(this._maxListeners)){m=this._maxListeners}else{m=EventEmitter.defaultMaxListeners}if(m&&m>0&&this._events[type].length>m){this._events[type].warned=true;console.error(\"(node) warning: possible EventEmitter memory \"+\"leak detected. %d listeners added. \"+\"Use emitter.setMaxListeners() to increase limit.\",this._events[type].length);if(typeof console.trace===\"function\"){console.trace()}}}return this};EventEmitter.prototype.on=EventEmitter.prototype.addListener;EventEmitter.prototype.once=function(type,listener){if(!isFunction(listener))throw TypeError(\"listener must be a function\");var fired=false;function g(){this.removeListener(type,g);if(!fired){fired=true;listener.apply(this,arguments)}}g.listener=listener;this.on(type,g);return this};EventEmitter.prototype.removeListener=function(type,listener){var list,position,length,i;if(!isFunction(listener))throw TypeError(\"listener must be a function\");if(!this._events||!this._events[type])return this;list=this._events[type];length=list.length;position=-1;if(list===listener||isFunction(list.listener)&&list.listener===listener){delete this._events[type];if(this._events.removeListener)this.emit(\"removeListener\",type,listener)}else if(isObject(list)){for(i=length;i-- >0;){if(list[i]===listener||list[i].listener&&list[i].listener===listener){position=i;break}}if(position<0)return this;if(list.length===1){list.length=0;delete this._events[type]}else{list.splice(position,1)}if(this._events.removeListener)this.emit(\"removeListener\",type,listener)}return this};EventEmitter.prototype.removeAllListeners=function(type){var key,listeners;if(!this._events)return this;if(!this._events.removeListener){if(arguments.length===0)this._events={};else if(this._events[type])delete this._events[type];return this}if(arguments.length===0){for(key in this._events){if(key===\"removeListener\")continue;this.removeAllListeners(key)}this.removeAllListeners(\"removeListener\");this._events={};return this}listeners=this._events[type];if(isFunction(listeners)){this.removeListener(type,listeners)}else if(listeners){while(listeners.length)this.removeListener(type,listeners[listeners.length-1])}delete this._events[type];return this};EventEmitter.prototype.listeners=function(type){var ret;if(!this._events||!this._events[type])ret=[];else if(isFunction(this._events[type]))ret=[this._events[type]];else ret=this._events[type].slice();return ret};EventEmitter.prototype.listenerCount=function(type){if(this._events){var evlistener=this._events[type];if(isFunction(evlistener))return 1;else if(evlistener)return evlistener.length}return 0};EventEmitter.listenerCount=function(emitter,type){return emitter.listenerCount(type)};function isFunction(arg){return typeof arg===\"function\"}function isNumber(arg){return typeof arg===\"number\"}function isObject(arg){return typeof arg===\"object\"&&arg!==null}function isUndefined(arg){return arg===void 0}},{}],2:[function(require,module,exports){var UA,browser,mode,platform,ua;ua=navigator.userAgent.toLowerCase();platform=navigator.platform.toLowerCase();UA=ua.match(/(opera|ie|firefox|chrome|version)[\\s\\/:]([\\w\\d\\.]+)?.*?(safari|version[\\s\\/:]([\\w\\d\\.]+)|$)/)||[null,\"unknown\",0];mode=UA[1]===\"ie\"&&document.documentMode;browser={name:UA[1]===\"version\"?UA[3]:UA[1],version:mode||parseFloat(UA[1]===\"opera\"&&UA[4]?UA[4]:UA[2]),platform:{name:ua.match(/ip(?:ad|od|hone)/)?\"ios\":(ua.match(/(?:webos|android)/)||platform.match(/mac|win|linux/)||[\"other\"])[0]}};browser[browser.name]=true;browser[browser.name+parseInt(browser.version,10)]=true;browser.platform[browser.platform.name]=true;module.exports=browser},{}],3:[function(require,module,exports){var EventEmitter,GIF,browser,extend=function(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key]}function ctor(){this.constructor=child}ctor.prototype=parent.prototype;child.prototype=new ctor;child.__super__=parent.prototype;return child},hasProp={}.hasOwnProperty,indexOf=[].indexOf||function(item){for(var i=0,l=this.length;i<l;i++){if(i in this&&this[i]===item)return i}return-1},slice=[].slice;EventEmitter=require(\"events\").EventEmitter;browser=require(\"./browser.coffee\");GIF=function(superClass){var defaults,frameDefaults;extend(GIF,superClass);defaults={workerScript:\"gif.worker.js\",workers:2,repeat:0,background:\"#fff\",quality:10,width:null,height:null,transparent:null,debug:false,dither:false};frameDefaults={delay:500,copy:false};function GIF(options){var base,key,value;this.running=false;this.options={};this.frames=[];this.freeWorkers=[];this.activeWorkers=[];this.setOptions(options);for(key in defaults){value=defaults[key];if((base=this.options)[key]==null){base[key]=value}}}GIF.prototype.setOption=function(key,value){this.options[key]=value;if(this._canvas!=null&&(key===\"width\"||key===\"height\")){return this._canvas[key]=value}};GIF.prototype.setOptions=function(options){var key,results,value;results=[];for(key in options){if(!hasProp.call(options,key))continue;value=options[key];results.push(this.setOption(key,value))}return results};GIF.prototype.addFrame=function(image,options){var frame,key;if(options==null){options={}}frame={};frame.transparent=this.options.transparent;for(key in frameDefaults){frame[key]=options[key]||frameDefaults[key]}if(this.options.width==null){this.setOption(\"width\",image.width)}if(this.options.height==null){this.setOption(\"height\",image.height)}if(typeof ImageData!==\"undefined\"&&ImageData!==null&&image instanceof ImageData){frame.data=image.data}else if(typeof CanvasRenderingContext2D!==\"undefined\"&&CanvasRenderingContext2D!==null&&image instanceof CanvasRenderingContext2D||typeof WebGLRenderingContext!==\"undefined\"&&WebGLRenderingContext!==null&&image instanceof WebGLRenderingContext){if(options.copy){frame.data=this.getContextData(image)}else{frame.context=image}}else if(image.childNodes!=null){if(options.copy){frame.data=this.getImageData(image)}else{frame.image=image}}else{throw new Error(\"Invalid image\")}return this.frames.push(frame)};GIF.prototype.render=function(){var i,j,numWorkers,ref;if(this.running){throw new Error(\"Already running\")}if(this.options.width==null||this.options.height==null){throw new Error(\"Width and height must be set prior to rendering\")}this.running=true;this.nextFrame=0;this.finishedFrames=0;this.imageParts=function(){var j,ref,results;results=[];for(i=j=0,ref=this.frames.length;0<=ref?j<ref:j>ref;i=0<=ref?++j:--j){results.push(null)}return results}.call(this);numWorkers=this.spawnWorkers();if(this.options.globalPalette===true){this.renderNextFrame()}else{for(i=j=0,ref=numWorkers;0<=ref?j<ref:j>ref;i=0<=ref?++j:--j){this.renderNextFrame()}}this.emit(\"start\");return this.emit(\"progress\",0)};GIF.prototype.abort=function(){var worker;while(true){worker=this.activeWorkers.shift();if(worker==null){break}this.log(\"killing active worker\");worker.terminate()}this.running=false;return this.emit(\"abort\")};GIF.prototype.spawnWorkers=function(){var j,numWorkers,ref,results;numWorkers=Math.min(this.options.workers,this.frames.length);(function(){results=[];for(var j=ref=this.freeWorkers.length;ref<=numWorkers?j<numWorkers:j>numWorkers;ref<=numWorkers?j++:j--){results.push(j)}return results}).apply(this).forEach(function(_this){return function(i){var worker;_this.log(\"spawning worker \"+i);worker=new Worker(_this.options.workerScript);worker.onmessage=function(event){_this.activeWorkers.splice(_this.activeWorkers.indexOf(worker),1);_this.freeWorkers.push(worker);return _this.frameFinished(event.data)};return _this.freeWorkers.push(worker)}}(this));return numWorkers};GIF.prototype.frameFinished=function(frame){var i,j,ref;this.log(\"frame \"+frame.index+\" finished - \"+this.activeWorkers.length+\" active\");this.finishedFrames++;this.emit(\"progress\",this.finishedFrames/this.frames.length);this.imageParts[frame.index]=frame;if(this.options.globalPalette===true){this.options.globalPalette=frame.globalPalette;this.log(\"global palette analyzed\");if(this.frames.length>2){for(i=j=1,ref=this.freeWorkers.length;1<=ref?j<ref:j>ref;i=1<=ref?++j:--j){this.renderNextFrame()}}}if(indexOf.call(this.imageParts,null)>=0){return this.renderNextFrame()}else{return this.finishRendering()}};GIF.prototype.finishRendering=function(){var data,frame,i,image,j,k,l,len,len1,len2,len3,offset,page,ref,ref1,ref2;len=0;ref=this.imageParts;for(j=0,len1=ref.length;j<len1;j++){frame=ref[j];len+=(frame.data.length-1)*frame.pageSize+frame.cursor}len+=frame.pageSize-frame.cursor;this.log(\"rendering finished - filesize \"+Math.round(len/1e3)+\"kb\");data=new Uint8Array(len);offset=0;ref1=this.imageParts;for(k=0,len2=ref1.length;k<len2;k++){frame=ref1[k];ref2=frame.data;for(i=l=0,len3=ref2.length;l<len3;i=++l){page=ref2[i];data.set(page,offset);if(i===frame.data.length-1){offset+=frame.cursor}else{offset+=frame.pageSize}}}image=new Blob([data],{type:\"image/gif\"});return this.emit(\"finished\",image,data)};GIF.prototype.renderNextFrame=function(){var frame,task,worker;if(this.freeWorkers.length===0){throw new Error(\"No free workers\")}if(this.nextFrame>=this.frames.length){return}frame=this.frames[this.nextFrame++];worker=this.freeWorkers.shift();task=this.getTask(frame);this.log(\"starting frame \"+(task.index+1)+\" of \"+this.frames.length);this.activeWorkers.push(worker);return worker.postMessage(task)};GIF.prototype.getContextData=function(ctx){return ctx.getImageData(0,0,this.options.width,this.options.height).data};GIF.prototype.getImageData=function(image){var ctx;if(this._canvas==null){this._canvas=document.createElement(\"canvas\");this._canvas.width=this.options.width;this._canvas.height=this.options.height}ctx=this._canvas.getContext(\"2d\");ctx.setFill=this.options.background;ctx.fillRect(0,0,this.options.width,this.options.height);ctx.drawImage(image,0,0);return this.getContextData(ctx)};GIF.prototype.getTask=function(frame){var index,task;index=this.frames.indexOf(frame);task={index:index,last:index===this.frames.length-1,delay:frame.delay,transparent:frame.transparent,width:this.options.width,height:this.options.height,quality:this.options.quality,dither:this.options.dither,globalPalette:this.options.globalPalette,repeat:this.options.repeat,canTransfer:browser.name===\"chrome\"};if(frame.data!=null){task.data=frame.data}else if(frame.context!=null){task.data=this.getContextData(frame.context)}else if(frame.image!=null){task.data=this.getImageData(frame.image)}else{throw new Error(\"Invalid frame\")};return task};GIF.prototype.log=function(){var args;args=1<=arguments.length?slice.call(arguments,0):[];if(!this.options.debug){return}return console.log.apply(console,args)};return GIF}(EventEmitter);module.exports=GIF},{\"./browser.coffee\":2,events:1}]},{},[3])(3)});\n//# sourceMappingURL=gif.js.map\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\n// Stream object for reading off bytes from a byte array\n\nfunction ByteStream(data){\n\tthis.data = data;\n\tthis.pos = 0;\n}\n\n// read the next byte off the stream\nByteStream.prototype.readByte = function(){\n\treturn this.data[this.pos++];\n};\n\n// look at the next byte in the stream without updating the stream position\nByteStream.prototype.peekByte = function(){\n\treturn this.data[this.pos];\n};\n\n// read an array of bytes\nByteStream.prototype.readBytes = function(n){\n\tvar bytes = new Array(n);\n\tfor(var i=0; i<n; i++){\n\t\tbytes[i] = this.readByte();\n\t}\n\treturn bytes;\n};\n\n// peek at an array of bytes without updating the stream position\nByteStream.prototype.peekBytes = function(n){\n\tvar bytes = new Array(n);\n\tfor(var i=0; i<n; i++){\n\t\tbytes[i] = this.data[this.pos + i];\n\t}\n\treturn bytes;\n};\n\n// read a string from a byte set\nByteStream.prototype.readString = function(len){\n\tvar str = '';\n\tfor(var i=0; i<len; i++){\n\t\tstr += String.fromCharCode(this.readByte());\n\t}\n\treturn str;\n};\n\n// read a single byte and return an array of bit booleans\nByteStream.prototype.readBitArray = function(){\n\tvar arr = [];\n\tvar bite = this.readByte();\n\tfor (var i = 7; i >= 0; i--) {\n\t\tarr.push(!!(bite & (1 << i)));\n\t}\n\treturn arr;\n};\n\n// read an unsigned int with endian option\nByteStream.prototype.readUnsigned = function(littleEndian){\n\tvar a = this.readBytes(2);\n\tif(littleEndian){\n\t\treturn (a[1] << 8) + a[0];\t\n\t}else{\n\t\treturn (a[0] << 8) + a[1];\n\t}\t\n};\n\nmodule.exports = ByteStream;\n},{}],2:[function(require,module,exports){\n\n// Primary data parsing object used to parse byte arrays\n\nvar ByteStream = require('./bytestream');\n\nfunction DataParser(data){\n\tthis.stream = new ByteStream(data);\n\t// the final parsed object from the data\n\tthis.output = {};\n}\n\nDataParser.prototype.parse = function(schema){\n\t// the top level schema is just the top level parts array\n\tthis.parseParts(this.output, schema);\t\n\treturn this.output;\n};\n\n// parse a set of hierarchy parts providing the parent object, and the subschema\nDataParser.prototype.parseParts = function(obj, schema){\n\tfor(var i=0; i<schema.length; i++){\n\t\tvar part = schema[i];\n\t\tthis.parsePart(obj, part); \n\t}\n};\n\nDataParser.prototype.parsePart = function(obj, part){\n\tvar name = part.label;\n\tvar value;\n\n\t// make sure the part meets any parse requirements\n\tif(part.requires && ! part.requires(this.stream, this.output, obj)){\n\t\treturn;\n\t}\n\t\n\tif(part.loop){\n\t\t// create a parse loop over the parts\n\t\tvar items = [];\n\t\twhile(part.loop(this.stream)){\n\t\t\tvar item = {};\n\t\t\tthis.parseParts(item, part.parts);\n\t\t\titems.push(item);\n\t\t}\n\t\tobj[name] = items;\n\t}else if(part.parts){\n\t\t// process any child parts\n\t\tvalue = {};\n\t\tthis.parseParts(value, part.parts);\n\t\tobj[name] = value;\n\t}else if(part.parser){\n\t\t// parse the value using a parser\n\t\tvalue = part.parser(this.stream, this.output, obj);\n\t\tif(!part.skip){\n\t\t\tobj[name] = value;\n\t\t}\n\t}else if(part.bits){\n\t\t// convert the next byte to a set of bit fields\n\t\tobj[name] = this.parseBits(part.bits);\n\t}\n};\n\n// combine bits to calculate value\nfunction bitsToNum(bitArray){\n\treturn bitArray.reduce(function(s, n) { return s * 2 + n; }, 0);\n}\n\n// parse a byte as a bit set (flags and values)\nDataParser.prototype.parseBits = function(details){\n\tvar out = {};\n\tvar bits = this.stream.readBitArray();\n\tfor(var key in details){\n\t\tvar item = details[key];\n\t\tif(item.length){\n\t\t\t// convert the bit set to value\n\t\t\tout[key] = bitsToNum(bits.slice(item.index, item.index + item.length));\n\t\t}else{\n\t\t\tout[key] = bits[item.index];\n\t\t}\n\t}\n\treturn out;\n};\n\nmodule.exports = DataParser;\n},{\"./bytestream\":1}],3:[function(require,module,exports){\n\n// a set of common parsers used with DataParser\n\nvar Parsers = {\n\t// read a byte\n\treadByte: function(){\n\t\treturn function(stream){\n\t\t\treturn stream.readByte();\n\t\t};\n\t},\n\t// read an array of bytes\n\treadBytes: function(length){\n\t\treturn function(stream){\n\t\t\treturn stream.readBytes(length);\n\t\t};\n\t},\n\t// read a string from bytes\n\treadString: function(length){\n\t\treturn function(stream){\n\t\t\treturn stream.readString(length);\n\t\t};\n\t},\n\t// read an unsigned int (with endian)\n\treadUnsigned: function(littleEndian){\n\t\treturn function(stream){\n\t\t\treturn stream.readUnsigned(littleEndian);\n\t\t};\n\t},\n\t// read an array of byte sets\n\treadArray: function(size, countFunc){\n\t\treturn function(stream, obj, parent){\n\t\t\tvar count = countFunc(stream, obj, parent);\n\t\t\tvar arr = new Array(count);\n\t\t\tfor(var i=0; i<count; i++){\n\t\t\t\tarr[i] = stream.readBytes(size);\n\t\t\t}\n\t\t\treturn arr;\n\t\t};\n\t}\n};\n\nmodule.exports = Parsers;\n},{}],4:[function(require,module,exports){\n// export wrapper for exposing library\n\nvar GIF = window.GIF || {};\n\nGIF = require('./gif');\n\nwindow.GIF = GIF;\n},{\"./gif\":5}],5:[function(require,module,exports){\n\n// object used to represent array buffer data for a gif file\n\nvar DataParser = require('../bower_components/js-binary-schema-parser/src/dataparser');\nvar gifSchema = require('./schema');\n\nfunction GIF(arrayBuffer){\n\t// convert to byte array\n\tvar byteData = new Uint8Array(arrayBuffer);\n\tvar parser = new DataParser(byteData);\n\t// parse the data\n\tthis.raw = parser.parse(gifSchema);\n\n\t// set a flag to make sure the gif contains at least one image\n\tthis.raw.hasImages = false;\n\tfor(var f=0; f<this.raw.frames.length; f++){\n\t\tif(this.raw.frames[f].image){\n\t\t\tthis.raw.hasImages = true;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n// process a single gif image frames data, decompressing it using LZW \n// if buildPatch is true, the returned image will be a clamped 8 bit image patch\n// for use directly with a canvas.\nGIF.prototype.decompressFrame = function(index, buildPatch){\n\n\t// make sure a valid frame is requested\n\tif(index >= this.raw.frames.length){ return null; }\n\n\tvar frame = this.raw.frames[index];\n\tif(frame.image){\n\t\t// get the number of pixels\n\t\tvar totalPixels = frame.image.descriptor.width * frame.image.descriptor.height;\n\n\t\t// do lzw decompression\n\t\tvar pixels = lzw(frame.image.data.minCodeSize, frame.image.data.blocks, totalPixels);\n\n\t\t// deal with interlacing if necessary\n\t\tif(frame.image.descriptor.lct.interlaced){\n\t\t\tpixels = deinterlace(pixels, frame.image.descriptor.width);\n\t\t}\n\n\t\t// setup usable image object\n\t\tvar image = {\n\t\t\tpixels: pixels,\n\t\t\tdims: {\n\t\t\t\ttop: frame.image.descriptor.top,\n\t\t\t\tleft: frame.image.descriptor.left,\n\t\t\t\twidth: frame.image.descriptor.width,\n\t\t\t\theight: frame.image.descriptor.height\n\t\t\t}\n\t\t};\n\n\t\t// color table\n\t\tif(frame.image.descriptor.lct && frame.image.descriptor.lct.exists){\n\t\t\timage.colorTable = frame.image.lct;\n\t\t}else{\n\t\t\timage.colorTable = this.raw.gct;\n\t\t}\n\n\t\t// add per frame relevant gce information\n\t\tif(frame.gce){\n\t\t\timage.delay = (frame.gce.delay || 10) * 10; // convert to ms\n\t\t\timage.disposalType = frame.gce.extras.disposal;\n\t\t\t// transparency\n\t\t\tif(frame.gce.extras.transparentColorGiven){\n\t\t\t\timage.transparentIndex = frame.gce.transparentColorIndex;\n\t\t\t}\n\t\t}\n\n\t\t// create canvas usable imagedata if desired\n\t\tif(buildPatch){\n\t\t\timage.patch = generatePatch(image);\n\t\t}\n\n\t\treturn image;\t\t\n\t}\n\n\t// frame does not contains image\n\treturn null;\n\n\n\t/**\n\t * javascript port of java LZW decompression\n\t * Original java author url: https://gist.github.com/devunwired/4479231\n\t */\t\n\tfunction lzw(minCodeSize, data, pixelCount) {\n \t\t\n \t\tvar MAX_STACK_SIZE = 4096;\n\t\tvar nullCode = -1;\n\n\t\tvar npix = pixelCount;\n\t\tvar available, clear, code_mask, code_size, end_of_information, in_code, old_code, bits, code, i, datum, data_size, first, top, bi, pi;\n \n \t\tvar dstPixels = new Array(pixelCount);\n\t\tvar prefix = new Array(MAX_STACK_SIZE);\n\t\tvar suffix = new Array(MAX_STACK_SIZE);\n\t\tvar pixelStack = new Array(MAX_STACK_SIZE + 1);\n \n\t\t// Initialize GIF data stream decoder.\n\t\tdata_size = minCodeSize;\n\t\tclear = 1 << data_size;\n\t\tend_of_information = clear + 1;\n\t\tavailable = clear + 2;\n\t\told_code = nullCode;\n\t\tcode_size = data_size + 1;\n\t\tcode_mask = (1 << code_size) - 1;\n\t\tfor (code = 0; code < clear; code++) {\n\t\t\tprefix[code] = 0;\n\t\t\tsuffix[code] = code;\n\t\t}\n \n\t\t// Decode GIF pixel stream.\n\t\tdatum = bits = count = first = top = pi = bi = 0;\n\t\tfor (i = 0; i < npix; ) {\n\t\t\tif (top === 0) {\n\t\t\t\tif (bits < code_size) {\n\t\t\t\t\t\n\t\t\t\t\t// get the next byte\t\t\t\n\t\t\t\t\tdatum += data[bi] << bits;\n\n\t\t\t\t\tbits += 8;\n\t\t\t\t\tbi++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// Get the next code.\n\t\t\t\tcode = datum & code_mask;\n\t\t\t\tdatum >>= code_size;\n\t\t\t\tbits -= code_size;\n\t\t\t\t// Interpret the code\n\t\t\t\tif ((code > available) || (code == end_of_information)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (code == clear) {\n\t\t\t\t\t// Reset decoder.\n\t\t\t\t\tcode_size = data_size + 1;\n\t\t\t\t\tcode_mask = (1 << code_size) - 1;\n\t\t\t\t\tavailable = clear + 2;\n\t\t\t\t\told_code = nullCode;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (old_code == nullCode) {\n\t\t\t\t\tpixelStack[top++] = suffix[code];\n\t\t\t\t\told_code = code;\n\t\t\t\t\tfirst = code;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tin_code = code;\n\t\t\t\tif (code == available) {\n\t\t\t\t\tpixelStack[top++] = first;\n\t\t\t\t\tcode = old_code;\n\t\t\t\t}\n\t\t\t\twhile (code > clear) {\n\t\t\t\t\tpixelStack[top++] = suffix[code];\n\t\t\t\t\tcode = prefix[code];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfirst = suffix[code] & 0xff;\n\t\t\t\tpixelStack[top++] = first;\n\n\t\t\t\t// add a new string to the table, but only if space is available\n\t\t\t\t// if not, just continue with current table until a clear code is found\n\t\t\t\t// (deferred clear code implementation as per GIF spec)\n\t\t\t\tif(available < MAX_STACK_SIZE){\n\t\t\t\t\tprefix[available] = old_code;\n\t\t\t\t\tsuffix[available] = first;\n\t\t\t\t\tavailable++;\n\t\t\t\t\tif (((available & code_mask) === 0) && (available < MAX_STACK_SIZE)) {\n\t\t\t\t\t\tcode_size++;\n\t\t\t\t\t\tcode_mask += available;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\told_code = in_code;\n\t\t\t}\n\t\t\t// Pop a pixel off the pixel stack.\n\t\t\ttop--;\n\t\t\tdstPixels[pi++] = pixelStack[top];\n\t\t\ti++;\n\t\t}\n\n\t\tfor (i = pi; i < npix; i++) {\n\t\t\tdstPixels[i] = 0; // clear missing pixels\n\t\t}\n\n\t\treturn dstPixels;\n\t}\n\n\t// deinterlace function from https://github.com/shachaf/jsgif\n\tfunction deinterlace(pixels, width) {\n\t\t\n\t\tvar newPixels = new Array(pixels.length);\n\t\tvar rows = pixels.length / width;\n\t\tvar cpRow = function(toRow, fromRow) {\n\t\t\tvar fromPixels = pixels.slice(fromRow * width, (fromRow + 1) * width);\n\t\t\tnewPixels.splice.apply(newPixels, [toRow * width, width].concat(fromPixels));\n\t\t};\n\n\t\t// See appendix E.\n\t\tvar offsets = [0,4,2,1];\n\t\tvar steps   = [8,8,4,2];\n\n\t\tvar fromRow = 0;\n\t\tfor (var pass = 0; pass < 4; pass++) {\n\t\t\tfor (var toRow = offsets[pass]; toRow < rows; toRow += steps[pass]) {\n\t\t\t\tcpRow(toRow, fromRow);\n\t\t\t\tfromRow++;\n\t\t\t}\n\t\t}\n\n\t\treturn newPixels;\n\t}\n\n\t// create a clamped byte array patch for the frame image to be used directly with a canvas\n\t// TODO: could potentially squeeze some performance by doing a direct 32bit write per iteration\n\tfunction generatePatch(image){\n\n\t\tvar totalPixels = image.pixels.length;\n\t\tvar patchData = new Uint8ClampedArray(totalPixels * 4);\n\t\tfor(var i=0; i<totalPixels; i++){\n\t\t\tvar pos = i * 4;\n\t\t\tvar colorIndex = image.pixels[i];\n\t\t\tvar color = image.colorTable[colorIndex];\n\t\t\tpatchData[pos] = color[0];\n\t\t\tpatchData[pos + 1] = color[1];\n\t\t\tpatchData[pos + 2] = color[2];\n\t\t\tpatchData[pos + 3] = colorIndex !== image.transparentIndex ? 255 : 0;\n\t\t}\n\n\t\treturn patchData;\n\t}\n};\n\n// returns all frames decompressed\nGIF.prototype.decompressFrames = function(buildPatch){\n\tvar frames = [];\n\tfor(var i=0; i<this.raw.frames.length; i++){\n\t\tvar frame = this.raw.frames[i];\n\t\tif(frame.image){\n\t\t\tframes.push(this.decompressFrame(i, buildPatch));\n\t\t}\n\t}\n\treturn frames;\n};\n\nmodule.exports = GIF;\n},{\"../bower_components/js-binary-schema-parser/src/dataparser\":2,\"./schema\":6}],6:[function(require,module,exports){\n\n// Schema for the js file parser to use to parse gif files\n// For js object convenience (re-use), the schema objects are approximately reverse ordered\n\n// common parsers available\nvar Parsers = require('../bower_components/js-binary-schema-parser/src/parsers');\n\n// a set of 0x00 terminated subblocks\nvar subBlocks = {\n\tlabel: 'blocks',\n\tparser: function(stream){\n\t\tvar out = [];\n\t\tvar terminator = 0x00;\t\t\n\t\tfor(var size=stream.readByte(); size!==terminator; size=stream.readByte()){\n\t\t\tout = out.concat(stream.readBytes(size));\n\t\t}\n\t\treturn out;\n\t}\n};\n\n// global control extension\nvar gce = {\n\tlabel: 'gce',\n\trequires: function(stream){\n\t\t// just peek at the top two bytes, and if true do this\n\t\tvar codes = stream.peekBytes(2);\n\t\treturn codes[0] === 0x21 && codes[1] === 0xF9;\n\t},\n\tparts: [\n\t\t{ label: 'codes', parser: Parsers.readBytes(2), skip: true },\n\t\t{ label: 'byteSize', parser: Parsers.readByte() },\n\t\t{ label: 'extras', bits: {\n\t\t\tfuture: { index: 0, length: 3 },\n\t\t\tdisposal: { index: 3, length: 3 },\n\t\t\tuserInput: { index: 6 },\n\t\t\ttransparentColorGiven: { index: 7 }\n\t\t}},\n\t\t{ label: 'delay', parser: Parsers.readUnsigned(true) },\n\t\t{ label: 'transparentColorIndex', parser: Parsers.readByte() },\n\t\t{ label: 'terminator', parser: Parsers.readByte(), skip: true }\n\t]\n};\n\n// image pipeline block\nvar image = {\n\tlabel: 'image',\n\trequires: function(stream){\n\t\t// peek at the next byte\n\t\tvar code = stream.peekByte();\n\t\treturn code === 0x2C;\n\t},\n\tparts: [\n\t\t{ label: 'code', parser: Parsers.readByte(), skip: true },\n\t\t{\n\t\t\tlabel: 'descriptor', // image descriptor\n\t\t\tparts: [\n\t\t\t\t{ label: 'left', parser: Parsers.readUnsigned(true) },\n\t\t\t\t{ label: 'top', parser: Parsers.readUnsigned(true) },\n\t\t\t\t{ label: 'width', parser: Parsers.readUnsigned(true) },\n\t\t\t\t{ label: 'height', parser: Parsers.readUnsigned(true) },\n\t\t\t\t{ label: 'lct', bits: {\n\t\t\t\t\texists: { index: 0 },\n\t\t\t\t\tinterlaced: { index: 1 },\n\t\t\t\t\tsort: { index: 2 },\n\t\t\t\t\tfuture: { index: 3, length: 2 },\n\t\t\t\t\tsize: { index: 5, length: 3 }\n\t\t\t\t}}\n\t\t\t]\n\t\t},{\n\t\t\tlabel: 'lct', // optional local color table\n\t\t\trequires: function(stream, obj, parent){\n\t\t\t\treturn parent.descriptor.lct.exists;\n\t\t\t},\n\t\t\tparser: Parsers.readArray(3, function(stream, obj, parent){\n\t\t\t\treturn Math.pow(2, parent.descriptor.lct.size + 1);\n\t\t\t})\n\t\t},{\n\t\t\tlabel: 'data', // the image data blocks\n\t\t\tparts: [\n\t\t\t\t{ label: 'minCodeSize', parser: Parsers.readByte() },\n\t\t\t\tsubBlocks\n\t\t\t]\n\t\t}\n\t]\n};\n\n// plain text block\nvar text = {\n\tlabel: 'text',\n\trequires: function(stream){\n\t\t// just peek at the top two bytes, and if true do this\n\t\tvar codes = stream.peekBytes(2);\n\t\treturn codes[0] === 0x21 && codes[1] === 0x01;\n\t},\n\tparts: [\n\t\t{ label: 'codes', parser: Parsers.readBytes(2), skip: true },\n\t\t{ label: 'blockSize', parser: Parsers.readByte() },\n\t\t{ \n\t\t\tlabel: 'preData', \n\t\t\tparser: function(stream, obj, parent){\n\t\t\t\treturn stream.readBytes(parent.text.blockSize);\n\t\t\t}\n\t\t},\n\t\tsubBlocks\n\t]\n};\n\n// application block\nvar application = {\n\tlabel: 'application',\n\trequires: function(stream, obj, parent){\n\t\t// make sure this frame doesn't already have a gce, text, comment, or image\n\t\t// as that means this block should be attached to the next frame\n\t\t//if(parent.gce || parent.text || parent.image || parent.comment){ return false; }\n\n\t\t// peek at the top two bytes\n\t\tvar codes = stream.peekBytes(2);\n\t\treturn codes[0] === 0x21 && codes[1] === 0xFF;\n\t},\n\tparts: [\n\t\t{ label: 'codes', parser: Parsers.readBytes(2), skip: true },\n\t\t{ label: 'blockSize', parser: Parsers.readByte() },\n\t\t{ \n\t\t\tlabel: 'id', \n\t\t\tparser: function(stream, obj, parent){\n\t\t\t\treturn stream.readString(parent.blockSize);\n\t\t\t}\n\t\t},\n\t\tsubBlocks\n\t]\n};\n\n// comment block\nvar comment = {\n\tlabel: 'comment',\n\trequires: function(stream, obj, parent){\n\t\t// make sure this frame doesn't already have a gce, text, comment, or image\n\t\t// as that means this block should be attached to the next frame\n\t\t//if(parent.gce || parent.text || parent.image || parent.comment){ return false; }\n\n\t\t// peek at the top two bytes\n\t\tvar codes = stream.peekBytes(2);\n\t\treturn codes[0] === 0x21 && codes[1] === 0xFE;\n\t},\n\tparts: [\n\t\t{ label: 'codes', parser: Parsers.readBytes(2), skip: true },\n\t\tsubBlocks\n\t]\n};\n\n// frames of ext and image data\nvar frames = {\n\tlabel: 'frames',\n\tparts: [\n\t\tgce,\n\t\tapplication,\n\t\tcomment,\n\t\timage,\n\t\ttext\n\t],\n\tloop: function(stream){\n\t\tvar nextCode = stream.peekByte();\n\t\t// rather than check for a terminator, we should check for the existence\n\t\t// of an ext or image block to avoid infinite loops\n\t\t//var terminator = 0x3B;\n\t\t//return nextCode !== terminator;\n\t\treturn nextCode === 0x21 || nextCode === 0x2C;\n\t}\n};\n\n// main GIF schema\nvar schemaGIF = [\n\t{\n\t\tlabel: 'header', // gif header\n\t\tparts: [\n\t\t\t{ label: 'signature', parser: Parsers.readString(3) },\n\t\t\t{ label: 'version', parser: Parsers.readString(3) }\n\t\t]\n\t},{\n\t\tlabel: 'lsd', // local screen descriptor\n\t\tparts: [\n\t\t\t{ label: 'width', parser: Parsers.readUnsigned(true) },\n\t\t\t{ label: 'height', parser: Parsers.readUnsigned(true) },\n\t\t\t{ label: 'gct', bits: {\n\t\t\t\texists: { index: 0 },\n\t\t\t\tresolution: { index: 1, length: 3 },\n\t\t\t\tsort: { index: 4 },\n\t\t\t\tsize: { index: 5, length: 3 }\n\t\t\t}},\n\t\t\t{ label: 'backgroundColorIndex', parser: Parsers.readByte() },\n\t\t\t{ label: 'pixelAspectRatio', parser: Parsers.readByte() }\n\t\t]\n\t},{\n\t\tlabel: 'gct', // global color table\n\t\trequires: function(stream, obj){\n\t\t\treturn obj.lsd.gct.exists;\n\t\t},\n\t\tparser: Parsers.readArray(3, function(stream, obj){\n\t\t\treturn Math.pow(2, obj.lsd.gct.size + 1);\n\t\t})\n\t},\n\tframes // content frames\n];\n\nmodule.exports = schemaGIF;\n},{\"../bower_components/js-binary-schema-parser/src/parsers\":3}]},{},[4])\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,\n\n\n/*** EXPORTS FROM exports-loader ***/\nexports[\"GIFuctJS\"] = (GIF);","/**\r\n * a plugin support cropperjs to crop gif image\r\n * \r\n * options:\r\n *  background: \"#fff\" default background color\r\n *  maxWidth: output image max width\r\n *  maxHeight: output image max height\r\n *  src: original image url (blob, base64, http)\r\n *  onerror: error callback, onerror(errorCode, error|null)\r\n */\r\nfunction GifCropper(options) {\r\n    options.background = options.background || '#fff';\r\n    this.options = options;\r\n    this.containerCanvas = document.createElement('canvas');\r\n    this.containerCtx = this.containerCanvas.getContext('2d');\r\n    this.convertorCanvas = document.createElement('canvas');\r\n    this.convertorCtx = this.convertorCanvas.getContext('2d');\r\n    this.containerCenterX = null;\r\n    this.containerCenterY = null;\r\n    this.image = null;\r\n    this.height = null;\r\n    this.width = null;\r\n\r\n    if(options.debug) {\r\n        nextTick = function(callback){\r\n            setTimeout(callback, 500);\r\n        };\r\n        this.containerCanvas.style.width=\"200px\";\r\n        this.convertorCanvas.style.width=\"200px\";\r\n        document.body.insertBefore(this.containerCanvas, document.body.firstChild);\r\n        document.body.insertBefore(this.convertorCanvas, document.body.firstChild);\r\n    }\r\n}\r\n\r\nvar ERROR = {\r\n    IMAGE_LOAD_ERROR: \"IMAGE_LOAD_ERROR\",\r\n    IMAGE_READ_ERROR: \"IMAGE_READ_ERROR\",\r\n    DECODE_ERROR: \"DECODE_ERROR\",\r\n    ENCODE_ERROR: \"ENCODE_ERROR\"\r\n}\r\n\r\nGifCropper.prototype.ERROR = ERROR;\r\n\r\n/**\r\n * cropper: cropperjs instance\r\n */\r\nGifCropper.prototype.crop = function(cropper, callback){\r\n    var cropArea = cropper.getData();\r\n    var that = this;\r\n    var limitRatio = this.calcLimitRatio(cropArea);\r\n    var limitCropArea = {\r\n        x: Math.round(cropArea.x * limitRatio),\r\n        y: Math.round(cropArea.y * limitRatio),\r\n        width: Math.round(cropArea.width * limitRatio),\r\n        height: Math.round(cropArea.height * limitRatio),\r\n        scaleX: cropArea.scaleX * limitRatio,\r\n        scaleY: cropArea.scaleY * limitRatio,\r\n        rotate: cropArea.rotate\r\n    };\r\n\r\n    this.readAndDecodeGif(function(){\r\n        that.setupCanvas(limitCropArea, limitRatio);\r\n        that.cropFrame(0, limitCropArea, [], function(result) {\r\n            that.saveGif(limitCropArea, result, function(cropBlob){\r\n                callback && callback(cropBlob);\r\n            });\r\n        });\r\n    });\r\n}\r\n/**\r\n * calculate ratio of output size limit to smaller then maxWidth and maxHeight \r\n */\r\nGifCropper.prototype.calcLimitRatio = function(cropArea){\r\n    var xRatio = this.options.maxWidth / cropArea.width;\r\n    var yRatio = this.options.maxHeight / cropArea.height;\r\n    if(xRatio < 1 || yRatio < 1) {\r\n        return Math.min(xRatio, yRatio);\r\n    }\r\n    return 1;\r\n};\r\n/**\r\n * get gif width and height, decode gif to frame array\r\n */\r\nGifCropper.prototype.readAndDecodeGif = function(callback){\r\n    var that = this;\r\n    this.image = new Image();\r\n    this.image.onload = function(){\r\n        that.width = this.naturalWidth || this.width;\r\n        that.height = this.naturalHeight || this.height;\r\n\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.responseType = \"arraybuffer\";\r\n        xhr.onreadystatechange = function(){\r\n            if(xhr.readyState == 4) {\r\n                if(xhr.status == 200) {\r\n                    that.decode(xhr.response, callback);\r\n                } else {\r\n                    that.errorHandler(ERROR.IMAGE_READ_ERROR, new Error(xhr.statusText));\r\n                }\r\n            }\r\n        }\r\n        xhr.open('GET', that.options.src);\r\n        xhr.send(null);\r\n    }\r\n    this.image.onerror = function(){\r\n        that.errorHandler(ERROR.IMAGE_LOAD_ERROR);\r\n    }\r\n    this.image.src = this.options.src;\r\n}\r\n/**\r\n * decode gif\r\n */\r\nGifCropper.prototype.decode = function(arraybuffer, callback){\r\n    try {\r\n        var gifDecoder = EasyGif.decoder(arraybuffer);\r\n        this.frames = gifDecoder.decompressFrames();\r\n        callback && callback();\r\n    } catch (error) {\r\n        this.errorHandler(ERROR.DECODE_ERROR, error);\r\n    }\r\n}\r\n/**\r\n * setup canvas size\r\n */\r\nGifCropper.prototype.setupCanvas = function(cropArea, limitRatio) {\r\n    // 计算图片旋转后的尺寸和切剪后的尺寸， 取最大的一方作为container的尺寸\r\n    var radian = Math.PI/180*cropArea.rotate;\r\n    var rotatedBoxWidth = (this.width*Math.cos(radian)+this.height*Math.sin(radian)) * limitRatio;\r\n    var rotatedBoxHeight = (this.height*Math.cos(radian)+this.width*Math.sin(radian)) * limitRatio;\r\n    \r\n    this.offsetX = -Math.min(cropArea.x, 0);\r\n    this.offsetY = -Math.min(cropArea.y, 0);\r\n    this.containerCenterX = this.offsetX + rotatedBoxWidth / 2;\r\n    this.containerCenterY = this.offsetY + rotatedBoxHeight / 2;\r\n\r\n    this.containerCanvas.width = Math.max(this.offsetX + rotatedBoxWidth, this.offsetX + cropArea.width, cropArea.x + cropArea.width);\r\n    this.containerCanvas.height = Math.max(this.offsetY + rotatedBoxHeight, this.offsetY + cropArea.height, cropArea.y + cropArea.height);\r\n    this.containerCtx.clearRect(0, 0, this.containerCanvas.width, this.containerCanvas.height);\r\n\r\n    this.convertorCanvas.width = this.width;\r\n    this.convertorCanvas.height = this.height;\r\n}\r\n/**\r\n * crop one frame by index\r\n */\r\nGifCropper.prototype.cropFrame = function(frameIndex, cropArea, result, callback) {\r\n    var frame = this.frames[frameIndex];\r\n    var imgData = EasyGif.frameToImageData(this.containerCtx, frame);\r\n    var cropImgData = null;\r\n    var that = this;\r\n\r\n    this.containerCtx.save();\r\n    this.containerCtx.translate(this.containerCenterX, this.containerCenterY);\r\n    this.containerCtx.rotate(cropArea.rotate*Math.PI/180);\r\n    this.containerCtx.scale(cropArea.scaleX, cropArea.scaleY);\r\n    this.containerCtx.drawImage(this.drawImgDataToCanvas(frame, imgData), -this.convertorCanvas.width/2, -this.convertorCanvas.height/2);\r\n    this.containerCtx.restore();\r\n\r\n    if(frameIndex == 0 && this.containerCtx.globalCompositeOperation) {\r\n        // 添加gif背景颜色\r\n        this.containerCtx.fillStyle = this.options.background;\r\n        this.containerCtx.globalCompositeOperation = \"destination-over\";\r\n        this.containerCtx.fillRect(0, 0, this.containerCanvas.width, this.containerCanvas.height);\r\n        this.containerCtx.globalCompositeOperation = \"source-over\";\r\n    }\r\n                \r\n    cropImgData = this.containerCtx.getImageData(\r\n        cropArea.x + this.offsetX,\r\n        cropArea.y + this.offsetY,\r\n        cropArea.width,\r\n        cropArea.height\r\n    );\r\n\r\n    result.push(cropImgData);\r\n\r\n    frameIndex++;\r\n    if(frameIndex < this.frames.length) {\r\n        nextTick(function(){\r\n            that.cropFrame(frameIndex, cropArea, result, callback);\r\n        });\r\n    } else {\r\n        callback && callback(result);\r\n    }\r\n}\r\nGifCropper.prototype.drawImgDataToCanvas = function(frame, imgData) {\r\n    this.convertorCtx.clearRect(0,0, this.width, this.height);\r\n    this.convertorCtx.putImageData(imgData, frame.dims.left, frame.dims.top);\r\n    return this.convertorCanvas;\r\n}\r\nGifCropper.prototype.saveGif = function(cropArea, imgDataList, callback){\r\n    var options = this.options.encoder || {};\r\n    options.width = cropArea.width;\r\n    options.height = cropArea.height;\r\n\r\n    try {\r\n        var encoder = EasyGif.encoder(options);\r\n    \r\n        for(var i=0;i<imgDataList.length;i++) {\r\n            encoder.addFrame(imgDataList[i], {\r\n                delay: this.frames[i].delay\r\n            });\r\n        }\r\n        encoder.on('finished', function(blob){\r\n            callback && callback(blob);\r\n\r\n            encoder.abort();\r\n            var workers = encoder.freeWorkers;\r\n            for (var i = 0; i < workers.length; i++) {\r\n                var worker = workers[i];\r\n                worker.terminate();\r\n            }\r\n        });\r\n        encoder.render();\r\n    } catch (error) {\r\n        this.errorHandler(ERROR.DECODE_ERROR, error);\r\n    }\r\n}\r\n\r\nGifCropper.prototype.errorHandler = function(errorCode, error){\r\n    this.options.onerror && this.options.onerror(errorCode, error);\r\n}\r\n\r\nvar nextTick = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.setTimeout;\r\n\r\n\r\nvar CropperjsGif = {\r\n    /**\r\n     * options: GifCropper options\r\n     * cropper: cropperjs instance\r\n     * callback: \r\n     */\r\n    crop: function(options, cropper, callback){\r\n        return new GifCropper(options).crop(cropper, callback);\r\n    }\r\n}\r\n\r\nexport { CropperjsGif };","var BlobCreator = {\r\n    createBlob: function(uint8Arr, options){\r\n        var blob;\r\n        try {\r\n            blob = new Blob( uint8Arr, options )\r\n        } catch (e) {\r\n            // TypeError old chrome and FF\r\n            window.BlobBuilder = window.BlobBuilder || \r\n                                    window.WebKitBlobBuilder || \r\n                                    window.MozBlobBuilder || \r\n                                    window.MSBlobBuilder;\r\n            if(e.name == 'TypeError' && window.BlobBuilder){\r\n                var bb = new BlobBuilder();\r\n                bb.append(uint8Arr[0].buffer);\r\n                blob = bb.getBlob(options.type || 'image/png');\r\n            }\r\n            else if(e.name == \"InvalidStateError\"){\r\n                // InvalidStateError (tested on FF13 WinXP)\r\n                blob = new Blob( [uint8Arr[0].buffer], options);\r\n            }\r\n            else{\r\n                throw Error('Not Supported Blob Constructor!')\r\n                // We're screwed, blob constructor unsupported entirely   \r\n            }\r\n        }\r\n        return blob;\r\n    }\r\n}\r\n\r\nexport default BlobCreator;","import BlobCreator from './blob-creator'\r\nimport GIF from '../bower_components/gif.js/dist/gif'\r\nimport { GIFuctJS } from 'exports-loader?GIFuctJS=GIF!../bower_components/gifuct-js/dist/gifuct-js'\r\n\r\n/**\r\n * constructor\r\n * @param {*} options \r\n */\r\nvar EasyGif = {\r\n    /**\r\n     * 1.修复Worker不能传递CanvasPixelArray的问题\r\n     * 2.修复BLOB构造BUG\r\n     */\r\n    fixCompatibility: function(){\r\n        GIF.prototype.getContextData = function(ctx){\r\n            var data = ctx.getImageData(0, 0, this.options.width, this.options.height).data;\r\n            if(/CanvasPixelArray/.test(Object.prototype.toString.call(data))){\r\n                data = EasyGif.toUint8Array(data);\r\n            }\r\n            return data;\r\n        }\r\n        var _addFrame = GIF.prototype.addFrame;\r\n        GIF.prototype.addFrame = function(){\r\n            var ret = _addFrame.apply(this, arguments);\r\n            var lastFrame = this.frames[this.frames.length - 1];\r\n            if(lastFrame && lastFrame.data && /CanvasPixelArray/.test(Object.prototype.toString.call(lastFrame.data))){\r\n                lastFrame.data = EasyGif.toUint8Array(lastFrame.data);\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        // 将代码中的\"new Blob\"替换成 \"BlobCreator.createBlob\"\r\n        var sourceCode = GIF.prototype.finishRendering.toString();\r\n        sourceCode = sourceCode.replace('new Blob', 'createBlob');\r\n        GIF.prototype.finishRendering = new Function('createBlob', 'return (' + sourceCode + ')')(BlobCreator.createBlob);\r\n    },\r\n    toUint8Array: function(data){\r\n        // var uintArray = new Uint8Array(data.length);\r\n        // for(var i=0,l=data.length; i<l; i++) {\r\n        //     uintArray[i] = data[i];\r\n        // }\r\n        // return uintArray;\r\n        return new Uint8Array(data);\r\n    },\r\n    frameToImageData: function(ctx, frame) {\r\n        var totalPixels = frame.pixels.length;\r\n        var imgData = ctx.createImageData(frame.dims.width, frame.dims.height);\r\n\t\tvar patchData = imgData.data;\r\n\t\tfor(var i=0; i<totalPixels; i++){\r\n\t\t\tvar pos = i * 4;\r\n\t\t\tvar colorIndex = frame.pixels[i];\r\n\t\t\tvar color = frame.colorTable[colorIndex];\r\n\t\t\tpatchData[pos] = color[0];\r\n\t\t\tpatchData[pos + 1] = color[1];\r\n\t\t\tpatchData[pos + 2] = color[2];\r\n\t\t\tpatchData[pos + 3] = colorIndex !== frame.transparentIndex ? 255 : 0;\r\n\t\t}\r\n\t\treturn imgData;\r\n    },\r\n    decoder: function (arrayBuffer) {\r\n        return new GIFuctJS(arrayBuffer);\r\n    },\r\n    encoder: function (options) {\r\n        return new GIF(options);\r\n    }\r\n};\r\nEasyGif.fixCompatibility();\r\nexport { EasyGif }","import { EasyGif } from './easy-gif'\r\nimport { CropperjsGif } from './cropperjs-gif'\r\nexport { EasyGif, CropperjsGif };"],"sourceRoot":""}